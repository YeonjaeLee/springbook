<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb?characterEncoding=euc_kr"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>
    <bean id="dataSource1" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb?characterEncoding=euc_kr"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>
    <bean id="dataSource2" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost/testdb?characterEncoding=euc_kr"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>

    <bean id="userDao" class="user.dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource"/>
        <property name="sqlService" ref="sqlService"/>
    </bean>
    <bean id="sqlService" class="user.sqlservice.XmlSqlService"/>
    <bean id="accountDao" class="user.dao.AccountDao">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="jdbcContext" class="user.dao.JdbcContext">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="userService" class="user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>

    <!--    트랙잭션 이용 방식 수정    -->
<!--    JTA : class="org.springframework.transaction.jta.JtaTransactionManager"    -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

<!--    TEST mail send-->
    <bean id="mailSender" class="user.service.DummyMailSender"/>
    <!--    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">-->
<!--        <property name="host" value="mail.server.com"/>-->
<!--    </bean>-->

    <!--    트랜잭션 어드바이스 빈 설정-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <tx:annotation-driven/>
<!--    <aop:config>-->
<!--        <aop:pointcut id="transactionPointcut" expression="bean(*Service)"/>-->
<!--        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointcut"/>-->
<!--        <aop:advisor advice-ref="batchAdvice" pointcut="execution(* *..*BatchJob.*(..))"/>-->
<!--    </aop:config>-->

<!--    <tx:advice id="transactionAdvice">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true" timeout="30"/>-->
<!--            <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->
<!--    <tx:advice id="batchAdvice">-->
<!--        <tx:attributes>-->
<!--            <tx:method name="get*" read-only="true"/>-->
<!--            <tx:method name="*"/>-->
<!--        </tx:attributes>-->
<!--    </tx:advice>-->

    <!--    테스트용 UserService 등록-->
    <bean id="testUserService" class="user.service.UserServiceTest$TestUserService" parent="userService"/>

<!--    MessageFactoryBean test-->
    <bean id="message" class="learningtest.spring.factorybean.MessageFactoryBean">
        <property name="text" value="Factory Bean"/>
    </bean>

</beans>